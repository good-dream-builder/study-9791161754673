server:
  port: 7002
  error:
    include-message: always

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: recommendation-db
  cloud:
    stream:
      defaultBinder: rabbit
      default:
        contentType: application/json
      bindings:
        input:
          destination: recommendations
          group: recommendationsGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit:
        bindings:
          input:
            consumer:
              autoBindDlq: true
              republishToDlq: true
      kafka:
        bindings:
          input:
            consumer:
              enableDlq: true

logging:
  level:
    root: INFO
    se.magnus: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

---
server:
  port: 80

spring:
  profiles: docker
  data:
    mongodb:
      host: mongodb

---
# 메시지 브로커에서 파티션을 사용하기 위한 속성
spring:
  profiles: streaming_partitioned
  cloud:
    stream:
      bindings:
        input:
          consumer:
            partitioned: true
            instanceCount: 2
---
# 첫 번째 파티션에서 메시지를 소비하기 위한 속성
spring:
  profiles: streaming_instance_0
  cloud:
    stream:
      bindings:
        input:
          consumer:
            instanceIndex: 0
---
# 두 번째 파티션에서 메시지를 소비하기 위한 속성
spring:
  profiles: streaming_instance_1
  cloud:
    stream:
      bindings:
        input:
          consumer:
            instanceIndex: 1

---
spring:
  profiles: prod
  data:
    mongodb:
      host: 172.17.0.1

logging:
  level:
    root: WARN
    se.magnus: WARN
    org.springframework.data.mongodb.core.MongoTemplate: WARN